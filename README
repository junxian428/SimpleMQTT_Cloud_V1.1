HIGHLIGHT

1. MQTT Subscriber

2. MQTT Publisher

3. Login Feature

4. WebSocket 

5. Create and Read Device

6. Can Subscribe Topic

7. Pagination

What havent implement?

1. Third Party API integration

-> Many-to-many  instead of one-to-one

2. UI/ UX improvement

3. MQTT Topic Redirect

4. Unsubscribe Topic (But endpoint done just frontend havent)

5. MQTT Topic Linked Bridge to Table Devices

6. Topic SECURITY

7. Account SECURITY

8. Graph 

9. Optimization

10. MQTTS protocol

11. SSL issue


CREATE TABLE user_table (
    id INT PRIMARY KEY AUTO_INCREMENT,
    username VARCHAR(255) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    token VARCHAR(255)
);
INSERT INTO user_table (username, password, token)
VALUES ('junxian428', 'junxian428', 'junxian428');

-- Create the plc_table
CREATE TABLE plc_table (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255),
    token VARCHAR(255),
    status VARCHAR(50),
    userid INT,
    FOREIGN KEY (userid) REFERENCES user_table(id)
);

INSERT INTO plc_table (name, token, status, userid)
VALUES ('PLC1', 'abc123', 'Active', 1);

-- Create the address table
CREATE TABLE address (
    id INT PRIMARY KEY AUTO_INCREMENT,
    plc_id INT,
    description VARCHAR(255),
    current_value INT,
    high INT,
    low INT,
    booleanNormalize BOOLEAN,
    FOREIGN KEY (plc_id) REFERENCES plc_table(id)
);


INSERT INTO address (plc_id, description, current_value, high, low, booleanNormalize)
VALUES (1, 'Sensor A', 50, 100, 0, true);


CREATE TABLE user_plan (
    id INT PRIMARY KEY,
    plan VARCHAR(255),
    user_id INT,
    FOREIGN KEY (user_id) REFERENCES user_table(id)
);


INSERT INTO user_plan (id, plan, user_id)
VALUES (2, 'Basic', 2);


SELECT user_plan.plan
FROM user_plan
INNER JOIN user_table ON user_plan.user_id = user_table.id
WHERE user_table.token = 'HOWENGYIN';


CREATE TABLE iot_device (
    id INT PRIMARY KEY AUTO_INCREMENT,
		 name VARCHAR(255),
    description VARCHAR(255),
    high VARCHAR(255),
    low VARCHAR(255),
    credential_token VARCHAR(255),
    userid INT,
    FOREIGN KEY (userid) REFERENCES user_table(id)
);

SELECT iot_device.*
FROM iot_device
INNER JOIN user_table ON iot_device.userid = user_table.id
WHERE user_table.token = 'HOWENGYIN';



CREATE TABLE user_topics (
    id INT PRIMARY KEY,
    user_id INT,
    topic_name VARCHAR(255),
    FOREIGN KEY (user_id) REFERENCES user_table(id)
);

INSERT INTO user_topics (id, user_id,topic_name) VALUES (2,2, "pressure");
INSERT INTO user_topics (id, user_id,topic_name) VALUES (3,2, "flowrate");


